# nix
#+title: Home Manager Configuration
#+property: header-args:nix :tangle home.nix
#+auto_tangle: t

* Home Manager Configuration
This is my personal Home Manager configuration. It manages my user environment in NixOS.

** Basic Configuration
Basic setup for Home Manager including user details and state version.


** Home Manager Modular Structure
The Home Manager configuration has been modularized into separate components under the ~modules/~ directory:

- base.nix :: Basic home-manager configuration including user details and environment variables
- cli-tools.nix :: Command-line tool configurations (kitty, eza, bat)
- git.nix :: Git configuration including user details and signing settings
- theme.nix :: Theme configuration including cursor, GTK, and font settings
- programs.nix :: Core program enables and configurations

Additional configuration modules are stored in separate directories:

#+begin_src bash
packages/
├── alacritty/      # Terminal emulator configuration
├── atuin/          # Shell history sync
├── cursor/         # Custom cursor package
├── doom/           # Doom Emacs configuration
├── dropbox/        # Dropbox service
├── dunst/          # Notification daemon
├── home-manager/   # Home Manager configuration
│   ├── modules/    # Core modules
│   │   ├── base.nix
│   │   ├── cli-tools.nix
│   │   ├── git.nix
│   │   ├── theme.nix
│   │   └── programs.nix
│   └── home.nix    # Main configuration file
├── hypr/           # Hyprland configuration
├── Pia/            # Private Internet Access VPN
├── scripts/        # Custom shell scripts
├── sops/          # Secrets management
├── starship/       # Shell prompt
├── tmux/           # Terminal multiplexer
├── waybar/         # Status bar
├── wofi/           # Application launcher
└── zsh/            # Shell configuration
#+end_src

The modular structure makes the configuration more maintainable and easier to update. Each module focuses on a specific aspect of the user environment, and the main ~home.nix~ file imports and combines these modules.

** Synchronization
A sync script (~sync.sh~) is provided to help maintain configuration files and secrets:
- Syncs .age secret files from ~/etc/secrets~
- Updates hardware configuration
- Updates system configuration
