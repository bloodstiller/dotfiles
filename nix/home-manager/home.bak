{ config, pkgs, ... }:

let
  cursor = pkgs.callPackage ./packages/cursor.nix {};
in
{
  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # Home Manager needs a bit of information about you and the paths it should
  # manage.
  home.username = "martin";
  home.homeDirectory = "/home/martin";

  # This value determines the Home Manager release that your configuration is
  # compatible with. This helps avoid breakage when a new Home Manager release
  # introduces backwards incompatible changes.
  #
  # You should not change this value, even if you update Home Manager. If you do
  # want to update the value, then make sure to first check the Home Manager
  # release notes.
  home.stateVersion = "25.05"; # Please read the comment before changing.

  programs.zsh = {
    enable = true;
    enableCompletion = true;
    
    # Install and configure zsh plugins properly
    plugins = [
      {
        name = "zsh-autosuggestions";
        src = pkgs.fetchFromGitHub {
          owner = "zsh-users";
          repo = "zsh-autosuggestions";
          rev = "v0.7.0";
          sha256 = "KLUYpUu4DHRumQZ3w59m9aTW6TBKMCXl2UcKi4uMd7w=";
        };
      }
      {
        name = "zsh-syntax-highlighting";
        src = pkgs.fetchFromGitHub {
          owner = "zsh-users";
          repo = "zsh-syntax-highlighting";
          rev = "0.7.1";
          sha256 = "gOG0NLlaJfotJfs+SUhGgLTNOnGLjoqnUp54V9aFJg8=";
        };
      }
    ];

    oh-my-zsh = {
      enable = true;
      plugins = [ "git" "history" "tmux" ];
      theme = "robbyrussell";
    };

    initExtra = ''
      source ${config.home.homeDirectory}/.dotfiles/zsh/.zshrc
    '';

  };
  
  programs.eza = {
    enable = true;
  };

  programs.bat = {
    enable = true;
  };

  programs.alacritty = {
    enable = true;
  };

  programs.starship = {
    enable = true;
  };


  programs.kitty = {
    enable = true; # required for the default Hyprland config
  };

  wayland.windowManager = {
    hyprland = {
      enable = true;
      systemd.enable = true;
      xwayland.enable = true;
      
      # Import environment for systemd services
      systemd.variables = ["--all"];
      
      # Basic settings (you can keep your detailed config in dotfiles)
      settings = {
        monitor = ",preferred,auto,1";  # Basic monitor config
        general = {
          gaps_in = 5;
          gaps_out = 10;
          border_size = 2;
        };
      };
    };
  };
  # Install Emacs
  programs.emacs = {
    enable = true;
    package = pkgs.emacs29;  # Using latest stable version
  };

  # Install packages
  home.packages = with pkgs; [
    thefuck
    ripgrep
    fd
    clang
    tmux
    cmake
    # New way to install specific Nerd Fonts
    nerd-fonts.jetbrains-mono
    nerd-fonts.iosevka
    dropbox
    wofi
    dunst
    waybar
    bitwarden
    slack
    btop
    discord
    google-chrome
    brave
    spotify
    ansible
    vagrant
    _1password-cli
    _1password-gui
    (python3.withPackages (ps: with ps; [
      pip
      virtualenv
      poetry-core
    ]))
    virt-manager
    jamesdsp
    cursor
  ];

  # Home Manager is pretty good at managing dotfiles. The primary way to manage
  # plain files is through 'home.file'.
  home.file = {
    # TPM installation
    ".tmux/plugins/tpm".source = pkgs.fetchFromGitHub {
      owner = "tmux-plugins";
      repo = "tpm";
      rev = "99469c4a9b1ccf77fade25842dc7bafbc8ce9946";
      sha256 = "hW8mfwB8F9ZkTQ72WQp/1fy8KL1IIYMZBtZYIwZdMQc=";
    };

    # Doom Emacs config files
    ".config/doom".source = ~/.dotfiles/doom;
    ".config/doom".recursive = true;

    # Alacritty config
    ".config/alacritty".source = ~/.dotfiles/alacritty;
    ".config/alacritty".recursive = true;

    # Link your zshrc directly to home directory
    ".zshrc".source = ~/.dotfiles/zsh/.zshrc;
    

    # Starship config
    ".config/starship.toml".source = ~/.dotfiles/starship/starship.toml;

    # Hyprland config
    ".config/hypr".source = ~/.dotfiles/hypr;
    ".config/hypr".recursive = true;

    # Dunst config
    ".config/dunst".source = ~/.dotfiles/dunst;
    ".config/dunst".recursive = true;

    # Wofi config
    ".config/wofi".source = ~/.dotfiles/wofi;
    ".config/wofi".recursive = true;

    # Waybar config
    ".config/waybar".source = ~/.dotfiles/waybar;
    ".config/waybar".recursive = true;
   
   # Add scripts folder
    ".config/scripts" = {
      source = ~/.dotfiles/scripts;
      executable = true;  # This sets the executable bit
    };

    # Link your entire zsh config directory
    ".config/zsh" = {
      source = ~/.dotfiles/zsh;
      recursive = true;
    };

  };

  # Home Manager can also manage your environment variables through
  # 'home.sessionVariables'. These will be explicitly sourced when using a
  # shell provided by Home Manager. If you don't want to manage your shell
  # through Home Manager then you have to manually source 'hm-session-vars.sh'
  # located at either
  #
  #  ~/.nix-profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  ~/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  /etc/profiles/per-user/martin/etc/profile.d/hm-session-vars.sh
  #
  home.sessionVariables = {
    EDITOR = "vim";
  };

  # Configure tmux with TPM
  programs.tmux = {
    enable = true;
    plugins = with pkgs.tmuxPlugins; [
      sensible
      # Add other tmux plugins here
    ];
    
    extraConfig = ''
      # Source your tmux configuration
      source ${config.home.homeDirectory}/.dotfiles/tmux/.tmux.conf
      
      # TPM Configuration
      set -g @plugin 'tmux-plugins/tpm'
      set -g @plugin 'tmux-plugins/tmux-sensible'
      
      # Initialize TPM (keep this line at the very bottom of tmux.conf)
      run '~/.tmux/plugins/tpm/tpm'
    '';
  };

  # Enable dconf (required for GNOME settings)
  dconf.enable = true;

  # GNOME Settings
  dconf.settings = {
    "org/gnome/shell" = {
      disable-user-extensions = false;
      enabled-extensions = [
        "allowlockedremotedesktop@kamens.us"
      ];
    };

    "org/gnome/desktop/interface" = {
      color-scheme = "prefer-dark";
    };
  };

  # Configure Dropbox service
  systemd.user.services.dropbox = {
    Unit = {
      Description = "Dropbox service";
    };
    Install = {
      WantedBy = [ "default.target" ];
    };
    Service = {
      ExecStart = "${pkgs.dropbox}/bin/dropbox";
      Restart = "on-failure";
    };
  };

  # Enable the programs
  programs = {
    wofi.enable = true;
    waybar.enable = true;
  };

  # Enable dunst service
  services.dunst.enable = true;

  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;

  # Configure Git with GitHub information
  programs.git = {
    enable = true;
    userName = "bloodstiller";
    userEmail = "bloodstiller@bloodstiller.com";
    
    # Enable credential store
    extraConfig = {
      init.defaultBranch = "main";
      pull.rebase = false;
      core.editor = "vim";
      credential.helper = "store";  # Enables credential storage
    };

    # Optional: Include additional config file for work email
    includes = [
      {
        # This will be used for work repositories
        condition = "gitdir:~/.config/work/";
        contents = {
          user = {
            email = "mbarker@babblevoice.com";
            name = "Martin Barker";
          };
        };
      }
    ];
  };

  # Theme configuration for Hyprland
  home.pointerCursor = {
    gtk.enable = true;
    package = pkgs.bibata-cursors;
    name = "Bibata-Modern-Classic";
    size = 16;
  };

  gtk = {
    enable = true;
    theme = {
      package = pkgs.flat-remix-gtk;
      name = "Flat-Remix-GTK-Grey-Darkest";
    };
    iconTheme = {
      package = pkgs.adwaita-icon-theme;
      name = "Adwaita";
    };
    font = {
      name = "Sans";
      size = 11;
    };
  };
}
